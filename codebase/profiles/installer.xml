<?xml version="1.0"?>
<!--
               Welcome to PGauge - HLA Benchmarking Suite
               https://github.com/openlvc/pgauge

         File: profiles/installer.xml
      Purpose: The common installer generation targets. Includes targets
               for Windows, Linux and Mac OS X.
-->
<project name="installer">

	<!-- ================================================================================= -->
	<!--                              Properties Declarations                              -->
	<!-- ================================================================================= -->
	<property name="installer.build.dir"      location="${build.dir}/installer"/>

	<!-- NSIS Installer Properties -->
	<property name="nsis.build.dir"           location="${installer.build.dir}/nsis"/>
	<property name="nsis.resources.dir"       location="${resources.dir}/installers/nsis"/>
	<property name="nsis.script.installer"    location="${nsis.resources.dir}/portico-installer.nsi"/>

	<!-- DMG Installer Properties -->
	<property name="dmg.resources.dir"        location="${resources.dir}/installers/dmg"/>
	
	<!-- ================================================================================= -->
	<!--                                Target Declarations                                -->
	<!-- ================================================================================= -->

	<!-- =========================================================== -->
	<!-- >>>> Target: installer.clean                                -->
	<!-- =========================================================== -->
	<target name="installer.clean">
		<delete dir="${installer.build.dir}"/>
	</target>

	<!-- ================================================================================= -->
	<!--                      (Target Group) Setup and Initialization                      -->
	<!-- ================================================================================= -->
	<target name="installer.init"
	        depends="installer.init.all,installer.init.win32,installer.init.linux,installer.init.macos"/>

	<!-- === Initialization for all platforms === -->
	<target name="installer.init.all" depends="">
		<mkdir dir="${installer.build.dir}"/>
	</target>

	<!-- === Windows Specific Property Setup === -->
	<target name="installer.init.win32" depends="installer.init.all" if="platform.win32">
		<echo>System is Windows, performing Windows-specific setup</echo>

		<!-- location to the jre -->
		<property name="platform.jre.local" value="jre"/> <!-- local dir name used in intaller -->
		<property name="platform.jre.dir"   location="${env.JAVA_HOME}/${platform.jre.local}"/>
	</target>

	<!-- === Linux Specific Property Setup === -->
	<target name="installer.init.linux" depends="installer.init.all" if="platform.linux">
		<echo>System is Linux, performing Linux-specific setup</echo>
	</target>

	<!-- === Mac OS X Specific Property Setup === -->
	<target name="installer.init.macos" depends="installer.init.all" if="platform.macos">
		<echo>System is Mac OS X, performing Mac OS X-specific setup</echo>
	</target>

	<!-- ================================================================================= -->
	<!--                     (Target Group) NSIS Installer Generation                      -->
	<!-- ================================================================================= -->
	<target name="installer.nsis"
	        depends="installer.nsis.init,installer.nsis.standalone"
			if="platform.win32"
			unless="build.devel">
	</target>

	<!-- ============================== -->
	<!-- (macro): nsis macro definition -->
	<!-- ============================== -->
	<macrodef name="nsis-exe" description="Generate pgauge installers">
		<!-- This macro will run the nsis installer tasks, generating executable wrappers for
		     portico and then generating an installer using the identified script. -->

		<!-- ===== Attributes ===== -->
		<attribute name="script"  description="Name of the installer script to run"/>

		<!-- ===== Actions ===== -->
		<sequential>
			<!-- Run the installer generation -->
			<echo>Creating Installer using @{script}</echo>
			<nsis script="@{script}"
				  verbosity="1"
				  path="${nsis.home}">
				<define name="OUTPUT_DIR"     value="${dist.dir}"/>
				<define name="VERSION"        value="${build.version}"/>
				<define name="SHORTNAME"      value="${build.shortname}"/>
				<define name="LICENSE"        value="${license}"/>
				<define name="SANDBOX"        value="${dist.sandbox.dir}"/>
				<define name="OTHER_FILES"    value="${nsis.build.dir}/${dist.name}"/>
				<!-- name of jre folder as in install -->
				<define name="JREDIR"         value="${platform.jre.local}"/>
				<define name="JREPATH"        value="${platform.jre.dir}"/>
			</nsis>
		</sequential>
	</macrodef>

	<!-- ************************************* -->
	<!-- **** TARGET: installer.nsis.init **** -->
	<!-- ************************************* -->
	<target name="installer.nsis.init" depends="installer.init" if="platform.win32">
		<echo>Running NSIS Installer Generation, must have NSIS installed on system</echo>
		<echo>The NSIS_HOME environment variable must point to your NSIS install</echo>

		<!-- validate that the NSIS_HOME env var exists -->
		<if>
			<not><isset property="env.NSIS_HOME"/></not>
			<then><echo>***WARNING*** NSIS_HOME env.var not set, assuming C:\Program Files\NSIS</echo>
			      <property name="nsis.home" value="C:\Program Files\NSIS"/></then>
			<else><property name="nsis.home" value="${env.NSIS_HOME}"/></else>
		</if>

		<!-- declare the nsis ant task -->
		<taskdef name="nsis" classname="net.sf.nsisant.Task"/>
		<echo>Loaded NSIS Task</echo>

		<!-- create the directory to store the executable files -->
		<mkdir dir="${nsis.build.dir}/${dist.name}"/>

		<!-- copy in the executables and URL shortcut files -->
		<copy todir="${nsis.build.dir}/${dist.name}">
			<fileset dir="${nsis.resources.dir}" includes="*.url"/>
			<!--<fileset dir="${nsis.resources.dir}" includes="*.exe"/>-->
		</copy>
	</target>

	<!-- ******************************************* -->
	<!-- **** TARGET: installer.nsis.standalone **** -->
	<!-- ******************************************* -->
	<target name="installer.nsis.standalone"
	        depends="installer.nsis.init"
	        if="platform.win32"
	        unless="build.devel">
		<nsis-exe script="${nsis.script.installer}"/>
	</target>

	<!-- ================================================================================= -->
	<!--                      (Target Group) DMG Installer Generation                      -->
	<!-- ================================================================================= -->

	<!-- ******************************* -->
	<!-- **** TARGET: installer.dmg **** -->
	<!-- ******************************* -->
	<target name="installer.dmg" depends="installer.init" if="platform.macos">
		<echo>Running DMG Generation, must be on Mac OS X</echo>
		
		<!-- Copy across the OS X Portico.app wrapper -->
		<!-- we have to use exec to we can get a permission-preserving copy -->
		<!--
		<echo>Copying Portico.app into distribution</echo>
		<exec executable="cp" failonerror="true">
			<arg line="-R ${dmg.resources.dir}/Portico.app ${dist.sandbox.dir}/"/>
		</exec>
		-->

		<!-- Run the Disk Image Generation Tool -->
		<!--
		<echo>Generating the DMG File</echo>
		<exec executable="hdiutil">
			<arg value="create"/>
			<arg value="-srcfolder"/>
			<arg value="${dist.sandbox.dir}"/>
			<arg value="-ov"/>
			<arg value="${dist.dir}/${dist.name}.dmg"/>
		</exec>
		-->
	</target>
</project>
